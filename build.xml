<?xml version="1.0"?>
<project name="app" basedir="." default="dist-all">
  <property file="build.properties"/>
  <property name="component.repository" location="${basedir}/lib"/>
  <property name="app_name" value="Mobilize"/>
  <property name="app_version" value="2.7"/>
  <property name="src" location="src"/>
  <property name="view" location="view"/>
  <property name="resources" location="web"/>
  <property name="build" location="build"/>
  <property name="dist"  location="dist"/>

  <fileset id="compile-dependencies" dir="${component.repository}">
    <include name="log4j-1.2.16.jar"/>
    <include name="servlet-api.jar"/>
	<include name="org.springframework.beans-3.1.0.RC1.jar"/>
	<include name="org.springframework.core-3.1.0.RC1.jar"/>
	<include name="org.springframework.jdbc-3.1.0.RC1.jar"/>
	<include name="org.springframework.transaction-3.1.0.RC1.jar"/>
	<include name="org.springframework.beans-3.0.5.RELEASE.jar" />
    <include name="org.springframework.core-3.0.5.RELEASE.jar" />
    <include name="org.springframework.jdbc-3.0.5.RELEASE.jar" />
    <include name="org.springframework.transaction-3.0.5.RELEASE.jar" />
    <include name="commons-logging-1.1.1.jar"/>
    <include name="commons-dbcp-1.4.jar"/>
    <include name="commons-io-2.1.jar"/>
    <include name="commons-fileupload-1.2.2.jar"/>
    <include name="commons-pool-1.5.7.jar"/>
    <include name="json-dot-org-2010-01-05.jar"/>
    <include name="json-org.jar"/>
	<include name="gson-2.1.jar"/>
    <include name="jbcrypt-0.3.jar"/>
    <include name="xom-1.2.7.jar"/>
    <include name="mobility-classifier-1.1.jar"/>
    <include name="xml-apis-xerces-2.11.0.jar"/>
  	<include name="ccn.jar"/>
  	<include name="mongo-2.5.3.jar"/>
	<include name="protobuf-java-2.4.1.jar"/>
  	<include name="bcprov-jdk16-143.jar"/>
  </fileset>

  <fileset id="run-dependencies" dir="${component.repository}">
    <include name="log4j-1.2.16.jar"/>
    <include name="org.springframework.asm-3.1.0.RC1.jar"/>
	<include name="org.springframework.beans-3.1.0.RC1.jar"/>
	<include name="org.springframework.context-3.1.0.RC1.jar"/>
	<include name="org.springframework.core-3.1.0.RC1.jar"/>
	<include name="org.springframework.expression-3.1.0.RC1.jar"/>
	<include name="org.springframework.jdbc-3.1.0.RC1.jar"/>
	<include name="org.springframework.transaction-3.1.0.RC1.jar"/>
	<include name="org.springframework.web-3.1.0.RC1.jar"/>
	<include name="org.springframework.web.portlet-3.1.0.RC1.jar"/>
	<include name="org.springframework.web.servlet-3.1.0.RC1.jar"/>
	<include name="org.springframework.asm-3.0.5.RELEASE.jar" />
    <include name="org.springframework.beans-3.0.5.RELEASE.jar" />
    <include name="org.springframework.context-3.0.5.RELEASE.jar" />
    <include name="org.springframework.core-3.0.5.RELEASE.jar" />
    <include name="org.springframework.expression-3.0.5.RELEASE.jar" />
    <include name="org.springframework.jdbc-3.0.5.RELEASE.jar" />
    <include name="org.springframework.transaction-3.0.5.RELEASE.jar" />
    <include name="org.springframework.web-3.0.5.RELEASE.jar" />
    <include name="commons-logging-1.1.1.jar"/>
    <include name="mysql-connector-java-5.1.18-bin.jar"/>
    <include name="commons-dbcp-1.4.jar"/>
    <include name="commons-io-2.1.jar"/>
    <include name="commons-fileupload-1.2.2.jar"/>
    <include name="commons-pool-1.5.7.jar"/>
    <include name="jstl-1.2.jar"/>
    <include name="json-dot-org-2010-01-05.jar"/>
    <include name="json-org.jar"/>
    <include name="gson-2.1.jar"/>
    <include name="jbcrypt-0.3.jar"/>
    <include name="xom-1.2.7.jar"/>
    <include name="mobility-classifier-1.1.jar"/>
    <include name="xml-apis-xerces-2.11.0.jar"/>
  	<include name="ccn.jar"/>
  	<include name="mongo-2.5.3.jar"/>
	<include name="protobuf-java-2.4.1.jar"/>
  	<include name="bcprov-jdk16-143.jar"/>
  </fileset>

  <path id="compile-classpath">
    <fileset refid="compile-dependencies"/>
  </path>

  <path id="run-classpath">
    <fileset refid="run-dependencies"/>
  </path>
  
  <taskdef uri="antlib:org.sonar.ant" resource="org/sonar/ant/antlib.xml">
    <classpath path="{component.repository}/sonar-ant-task-1.1.jar" /> 
  </taskdef>

  <target name="help-properties" description="Shows what properties you may want to override on the command line.">
    <echo message="-Dcomponent.repository=&lt;path&gt;  Where to search for dependencies/versioned components during build [${component.repository}]."/>
    <echo message="-Dversion=&lt;version&gt;  Version string to use for output [${app_version}]."/>
  </target>

  <target name="clean" description="Removes output directories (e.g. build and dist).">
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
    <delete file="web/META-INF/system.properties"/>
  </target>

  <target name="javac" description="Compiles Java files.">
    <mkdir dir="${build}/classes"/>
    <javac destdir="${build}/classes" source="1.6" target="1.6"
          debug="true" deprecation="true" optimize="false" failonerror="true" 
    	  encoding="UTF-8">
      <compilerarg value="-Xlint:unchecked"/>
      <src path="${src}"/>
      <classpath refid="compile-classpath"/>
    </javac>
    <copy todir="${build}/classes">
      <fileset dir="${src}">
        <exclude name="**/*.java"/>
      </fileset>
    </copy>
  </target>
	
  <target name="javac-validator" description="Compiles Java files to create the campaign validator.">
    <mkdir dir="${build}/classes"/>
    <javac destdir="${build}/classes" source="1.6" target="1.6"
          debug="true" deprecation="true" optimize="false" failonerror="true" 
    	  encoding="UTF-8">
      <compilerarg value="-Xlint:unchecked"/>
      <src path="${src}"/>
      <include name="org/ohmage/config/**" />
      <include name="org/ohmage/util/StringUtils.java" />
      <classpath refid="compile-classpath"/>
    </javac>
    <copy todir="${build}/classes">
      <fileset dir="${src}">
        <exclude name="**/*.java"/>
      </fileset>
    </copy>
  </target>

  <target name="javadoc" description="Compiles Javadocs.">
    <mkdir dir="${build}/docs"/>
    <javadoc destdir="${build}/docs" private="true" link="http://java.sun.com/javase/6/docs/api/"
             encoding="UTF-8" additionalparam="-quiet">
      <fileset dir="${src}">
        <include name="**/*.java"/>
      </fileset>
       <classpath refid="compile-classpath"/>
    </javadoc>
  </target>

  <target name="dist" depends="javac" description="Compiles Java files and creates WAR.">
    <mkdir dir="${dist}"/>
    <echo message="Warning: Bundling of dependencies will not work if jars are organized in subdirs in component repository."/>
    <exec executable="git" outputproperty="git.revision" failifexecutionfails="true">
      <arg value="log"/>
      <arg value="--pretty=format:%h"/>
      <arg value="-1"/>
    </exec>
    <propertyfile file="system.properties" comment="This file is automatically generated - DO NOT EDIT!">
      <entry key="application_name" default="${app_name}"/>
      <entry key="application_version" default="${app_version}"/>
      <entry key="application_build" default="${git.revision}"/>
      <entry key="ssl_enabled" default="true"/>
    </propertyfile>
    <move file="system.properties" todir="web/META-INF"/>
    <war webxml="${resources}/WEB-INF/web-ssl.xml" destfile="${dist}/${ant.project.name}-${app_version}.war">
      <classes dir="${build}/classes"/>
      <lib refid="run-dependencies"/>
      <webinf dir="${resources}/WEB-INF">
        <exclude name="web-no_ssl.xml"/>
        <exclude name="web-ssl.xml"/>
      </webinf>
      <metainf dir="${resources}/META-INF">
        <exclude name="MANIFEST.MF"/>
      </metainf>
      <zipfileset dir="${resources}">
        <exclude name="META-INF/**"/>
        <exclude name="WEB-INF/**"/>
      </zipfileset>
    </war>
  </target>

  <target name="dist-no_ssl" depends="javac" description="Compiles Java files and creates WAR.">
    <mkdir dir="${dist}"/>
    <echo message="Warning: Bundling of dependencies will not work if jars are organized in subdirs in component repository."/>
    <exec executable="git" outputproperty="git.revision" failifexecutionfails="true">
      <arg value="log"/>
      <arg value="--pretty=format:%h"/>
      <arg value="-1"/>
    </exec>
    <propertyfile file="system.properties" comment="This file is automatically generated - DO NOT EDIT!">
      <entry key="application_name" default="${app_name}"/>
      <entry key="application_version" default="${app_version}"/>
      <entry key="application_build" default="${git.revision}"/>
      <entry key="ssl_enabled" default="false"/>
    </propertyfile>
    <move file="system.properties" todir="web/META-INF"/>
    <war webxml="${resources}/WEB-INF/web-no_ssl.xml" destfile="${dist}/${ant.project.name}-${app_version}-no_ssl.war">
      <classes dir="${build}/classes"/>
      <lib refid="run-dependencies"/>
      <webinf dir="${resources}/WEB-INF">
        <exclude name="web-no_ssl.xml"/>
        <exclude name="web-ssl.xml"/>
      </webinf>
      <metainf dir="${resources}/META-INF">
        <exclude name="MANIFEST.MF"/>
      </metainf>
      <zipfileset dir="${resources}">
        <exclude name="META-INF/**"/>
        <exclude name="WEB-INF/**"/>
      </zipfileset>
    </war>
  </target>
	
  <target name="dist-validator" depends="javac-validator" 
  	    description="Compiles Java files and creates an executable jar file with the dependencies embedded.">
    <mkdir dir="${dist}"/>
    <echo message="Warning: Bundling of dependencies will not work if jars are organized in subdirs in component repository."/>
    <jar destfile="${dist}/${app_name}-${app_version}-validator.jar">
      <fileset dir="${build}/classes">
        <include name="org/ohmage/config/**" />
      	<include name="org/ohmage/util/StringUtils.class" />
      </fileset>
      <zipfileset src="${component.repository}/json-dot-org-2010-01-05.jar" excludes="META-INF/*" />
      <zipfileset src="${component.repository}/log4j-1.2.16.jar" excludes="META-INF/*" />
      <zipfileset src="${component.repository}/xom-1.2.6.jar" excludes="META-INF/*" />
      <zipfileset src="${component.repository}/xercesImpl-2.11.0.jar" excludes="META-INF/*" />
      <manifest>
        <attribute name="Main-Class" value="org.ohmage.config.xml.CampaignValidator" />
      </manifest>
    </jar>
  </target>

  <target name="dist-docs" depends="javadoc" description="Compiles Javadocs and creates gzipped tarball.">
    <mkdir dir="${dist}"/>
    <tar basedir="${build}/docs" destfile="${dist}/${ant.project.name}-docs-${app_version}.tar.gz" longfile="gnu" compression="gzip"/>
    <zip basedir="${build}/docs" destfile="${dist}/${ant.project.name}-docs-${app_version}.zip" encoding="UTF-8" compress="true"/>
  </target>

  <target name="dist-all" depends="dist,dist-docs" description="Creates full distribution (WAR and docs)."/>
  <target name="dist-all-no_ssl" depends="dist-no_ssl,dist-docs" description="Creates full distribution (WAR and docs)."/>

  <target name="release" depends="dist" description="Releases the distribution by copying it to the component repository..">
    <copy file="${dist}/${ant.project.name}-${app_version}.war" todir="${component.repository}/."/>
  </target>
  
  <target name="sonar">
    <sonar:sonar workDir="${user.home}/tmp" key="org.ohmage:example" version="2.5" xmlns:sonar="antlib:org.sonar.ant">
      <sources>
        <path location="${src}" />
      </sources>
      <property key="sonar.java.source" value="1.6" />
      <property key="sonar.java.target" value="1.6" />
    </sonar:sonar>
  </target>
  
</project>
